# Et beskrivende navn for arbeidsflyten, som vises i GitHub Actions-UI-en.
name: VARDR Application CI

# Definerer utløseren (trigger) for arbeidsflyten.
on:
  # 'push'-hendelsen utløser arbeidsflyten.
  push:
    # Den kjører kun for pusher til 'main'-branchen.
    branches:
      - main

# Definerer jobbene som utgjør arbeidsflyten.
jobs:
  # En enkelt jobb med navnet 'build-and-update-manifest'.
  build-and-update-manifest:
    # KRITISK: Spesifiserer at jobben må kjøre på en runner
    # med 'self-hosted'-labelen, som er vår lokale Ubuntu-PC.
    runs-on: self-hosted

    # 'steps'-seksjonen inneholder en sekvens av oppgaver som skal utføres.
    steps:
      # Steg 1: Sjekk ut applikasjonens kildekode.
      - name: Checkout Application Repository
        uses: actions/checkout@v4

      # Steg 2: Bygg Docker-imaget.
      # Imaget tagges med den unike Git commit SHA-en for sporbarhet.
      # Fordi runneren er konfigurert med 'minikube docker-env',
      # bygges dette imaget direkte inn i Minikubes lokale Docker-daemon.
      - name: Build Docker Image
        run: |
          docker build -t vardr-app:${{ github.sha }} .

      # Steg 3: Sjekk ut det separate manifest-repoet.
      - name: Checkout Manifest Repository
        uses: actions/checkout@v4
        with:
          # Spesifiserer repoet som skal sjekkes ut. Bytt ut med ditt brukernavn.
          repository: OddAir/vardr-manifests
          # Bruker tokenet vi lagret i GitHub Secrets for autentisering.
          token: ${{ secrets.MANIFEST_REPO_PAT }}
          # Sjekker ut repoet i en spesifikk undermappe for å unngå konflikter.
          path: vardr-manifests

      # Steg 4: Oppdater image.tag i Helm-chartets values.yaml.
      # 'yq' er en kommandolinje-prosessor for YAML som er forhåndsinstallert på runneren.
      - name: Update Helm Chart Values
        run: |
          yq -i '.image.tag = "${{ github.sha }}"' vardr-manifests/vardr-app/values.yaml

      # Steg 5: Commit og push de endrede manifestene.
      - name: Commit and Push Manifest Changes
        run: |
          # Naviger inn i manifest-repoets mappe.
          cd vardr-manifests
          # Konfigurer Git med en bot-brukeridentitet for committen.
          git config user.name "GitHub Actions Bot"
          git config user.email "actions-bot@github.com"
          # Stage endringene (den modifiserte values.yaml).
          git add .
          # Opprett en commit med en beskrivende melding.
          # '[skip ci]' er en konvensjon for å hindre at denne committen utløser andre workflows.
          git commit -m "Update image for vardr-app to commit ${{ github.sha }} [skip ci]"
          # Push committen til 'main'-branchen av manifest-repoet.
          git push